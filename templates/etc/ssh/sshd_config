# Ansible managed file, do not edit directly

{% for port in openssh_ports %}
Port {{ port }}
{% endfor %}

Protocol 2

# Logging
SyslogFacility AUTH
LogLevel VERBOSE

{% for host_key_path in openssh_host_key_paths %}
HostKey {{ host_key_path }}
{% endfor %}

KexAlgorithms {{ openssh_key_exchange_algorithms | reject('upper') | join(',') }}
Ciphers {{ openssh_ciphers | reject('upper') | join(',') }}
MACs {{ openssh_mac_algorithms | reject('upper') | join(',') }}

# Authentication:
LoginGraceTime 120
PermitRootLogin no
StrictModes yes
MaxAuthTries 3
MaxSessions 6
UsePAM yes
AuthenticationMethods {{ openssh_auth_methods | reject('upper') | join(',')  }}
PasswordAuthentication no
KbdInteractiveAuthentication {{ openssh_kbd_interactive_auth }}

AcceptEnv LANG LC_*
PrintMotd no

# Log sftp level file access (read/write/etc.) that would not be easily logged otherwise
{% if ansible_distribution == "Fedora" %}
Subsystem sftp  /usr/libexec/openssh/sftp-server -f AUTHPRIV -l INFO
{% else %}
Subsystem sftp  /usr/lib/ssh/sftp-server -f AUTHPRIV -l INFO
{% endif %}

UseDNS no

# Use kernel sandbox mechanisms where possible in unprivileged processes
# Systrace on OpenBSD, Seccomp on Linux, seatbelt on MacOSX/Darwin, rlimit elsewhere.
UsePrivilegeSeparation sandbox

{% for user_and_auth_method in openssh_users_and_auth_methods %}
Match user {{ user_and_auth_method["user"] }}
  AuthenticationMethods {{ user_and_auth_method["auth_method"] }}
{% endfor %}
